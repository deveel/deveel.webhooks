name: Webhooks CD

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: "Build and Test"
    strategy:
      fail-fast: true
      matrix:
        dotnet: [ '6.0.x', '7.0.x', '8.0.x' ]
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET ${{ matrix.dotnet }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet }}

    - name: Set the TFM in Ubuntu
      run: |
          VERSION=$(echo "${{ matrix.dotnet }}" | sed 's/[^0-9.]*//g')
          VERSION=$(echo "${VERSION}" | sed 's/\.$//')
          DOTNET_TFM="net${VERSION}"
          echo "DOTNET_TFM=$DOTNET_TFM" >> $GITHUB_ENV
          
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore -c Release -f ${{ env.DOTNET_TFM }}
    
    - name: Test
      run: dotnet test --no-build --verbosity normal -c  Release -f ${{ env.DOTNET_TFM }} /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude="[*.XUnit]*"
      
    - name: Collect to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.OCM_CODECOV_TOKEN }}

  publish:
    needs: build
    name: "Pack"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Pack
      run: dotnet pack --configuration Release --include-symbols --version-suffix $GITHUB_RUN_ID --output ./nuget

    - name: Push Packages to GitHub NuGet
      run: dotnet nuget push ./nuget/**/*.nupkg --skip-duplicate --api-key ${{secrets.GITHUB_TOKEN}} --source "https://nuget.pkg.github.com/deveel/index.json"

  clean:
    needs: publish
    name: "Clean Old Packages"
    uses: ./.github/workflows/clean-packages.yml